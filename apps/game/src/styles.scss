@use '@angular/material' as mat;

@import '@angular/cdk/overlay-prebuilt.css';
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-legacy-component-typographies();
@include mat.legacy-core();

$primary: mat.define-palette(mat.$light-green-palette, 500);
$accent: mat.define-palette(mat.$blue-gray-palette, A200, A100, A400);

$dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $primary,
      accent: $accent,
    ),
  )
);

// Emit theme-dependent styles for common features used across multiple components.
@include mat.legacy-core-theme($dark-theme);

// Apply the dark theme by default
@include mat.all-legacy-component-themes($dark-theme);

/* You can add global styles to this file, and also import other style files */

:root {
  --font-heading: 'Germania One', cursive;
  --font-body: 'Roboto', sans-serif;
  --font-size: 1.6rem;
  --color-bg: 18, 18, 18;
  --color-text: 241, 241, 241;
  --color-accent: 255, 255, 255;
  --color-active: 255, 255, 255;
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-size: 1.2rem;
  font-family: var(--font-body);
  background-color: rgb(var(--color-bg));
  color: rgb(var(--color-text));

  button {
    font-family: var(--font-heading);
  }
}

header {
  font-size: 1.8rem;
  font-family: var(--font-heading);
}

input {
  font-family: var(--font-heading);
}

a:link,
a:visited,
a:hover {
  cursor: pointer;
  color: rgba(var(--color-active), 0.6);
  transition: color 200ms;
  text-decoration: none;
}
a:hover {
  color: rgba(var(--color-active), 0.8);
  text-decoration: underline;
}
a:target,
a:active,
a.active {
  color: rgb(var(--color-active));
}

.flex {
  display: flex;

  &-1 {
    flex: 1;
  }

  &-row {
    flex-direction: row;

    &.end {
      justify-content: flex-end;
    }

    &.align-center {
      align-items: center;
    }
  }

  &-column {
    flex-direction: column;

    &.end {
      align-items: flex-end;
    }

    &.align-center {
      justify-content: center;
    }
  }

}

.gap-8 {
  gap: 8px;
}
.gap-16 {
  gap: 16px;
}

.mb-8 {
  margin-bottom: 8px;
}
.mb-16 {
  margin-bottom: 16px;
}

.spacer {
  flex: 1 1 auto;
}
